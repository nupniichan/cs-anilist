name: Publish to nuget when tag is created
on:
  push:
    tags:
      - 'v*.*.*'  
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET 9
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
    
    - name: Extract version from tag
      id: get_version
      run: |
        TAG_NAME="${GITHUB_REF##*/}"  
        echo "Tag name: $TAG_NAME"
        
        VERSION="${TAG_NAME:1}"
        echo "Version from tag: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Check version in cs-anilist.csproj
      id: check_version
      run: |
        FILE="cs-anilist/cs-anilist.csproj"
        if [ ! -f "$FILE" ]; then
          echo "Error: File $FILE not found!"
          exit 1
        fi
        
        CURRENT_VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" "$FILE" || echo "not found")
        echo "Current version in cs-anilist.csproj: $CURRENT_VERSION"
        
        if [[ "$CURRENT_VERSION" != "$VERSION" ]]; then
          echo "Version mismatch! Tag version: $VERSION, Project version: $CURRENT_VERSION"
          echo "Please update the project version to match the tag before publishing."
          exit 1
        else
          echo "Version check passed. Tag and project versions match: $VERSION"
        fi
    
    - name: Restore dependencies
      run: dotnet restore cs-anilist/cs-anilist.csproj
      
    - name: Build
      run: dotnet build cs-anilist/cs-anilist.csproj --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test cs-anilist.test/cs-anilist.test.csproj --configuration Release --no-build
      
    - name: Pack
      run: dotnet pack cs-anilist/cs-anilist.csproj --configuration Release --no-build -o ./nupkgs
    
    - name: Push to NuGet
      run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json